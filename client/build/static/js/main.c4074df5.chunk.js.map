{"version":3,"sources":["reduxUtilities/uiActions.ts","utilities/dateUtilities/isWeekend.ts","typeGuards/isSelectedDate.ts","typeGuards/isSuggestedDate.ts","typeGuards/isEmptyDate.ts","typeGuards/isConnectedDate.ts","typeGuards/isHolidayDate.ts","reduxUtilities/uiSelectors.ts","components/CalendarEntry.tsx","components/Calendar.tsx","utilities/getVacationPlanUrl.ts","components/SaveButton.tsx","components/DateSelection.tsx","components/Main.tsx","App.tsx","serviceWorker.ts","reduxUtilities/uiSagas.ts","reduxUtilities/rootSaga.ts","utilities/isCalendarDateEqual.ts","utilities/getCalendarDatesForMonth.ts","utilities/getCalendarDatesForYear.ts","dateTypeProviders/getSelectedDate.ts","dateTypeProviders/getEmptyDate.ts","utilities/getUpdatedConnectedDates.ts","typeGuards/isVacationDate.ts","dateTypeProviders/getConnectedDate.ts","utilities/Throw.ts","utilities/centerVacation.ts","utilities/assignVacationToSegment.ts","utilities/evenSelectionCreation/getSelectionPossibilities.ts","utilities/evenSelectionCreation/getSpread.ts","utilities/evenSelectionCreation/getGaps.ts","utilities/getUpdatedSuggestedDates.ts","utilities/evenSelectionCreation/getMostEvenSelection.ts","dateTypeProviders/getSuggestedDate.ts","reduxUtilities/uiReducer.ts","utilities/dateUtilities/getCurrentYear.ts","reduxUtilities/rootReducer.ts","reduxUtilities/store.ts","index.tsx","utilities/getBaseUrl.ts"],"names":["UiActionKeys","uiActions","date","action","TOGGLE_DATE","month","SET_MONTH","GET_SUGGESTED_DATES","numVacationDates","SET_NUM_VACATION_DATES","request","vacationPlan","UPDATE_VACATION_PLAN","success","saveResponse","UPDATE_VACATION_PLAN_SUCCESS","url","GET_VACATION_PLAN","vacationPlanModel","GET_VACATION_PLAN_SUCCESS","failure","message","GET_VACATION_PLAN_FAILURE","createVacationPlanModel","callback","CREATE_VACATION_PLAN","CREATE_VACATION_PLAN_SUCCESS","isWeekend","calendarDate","getDay","isSelectedDate","type","isSuggestedDate","isEmptyDate","isConnectedDate","isHolidayDate","getUiSlice","state","ui","numRemainingVacationDatesSelector","createSelector","calendarDates","reduce","agg","cur","CalendarEntry","connect","ownProps","isInCurrentMonth","currentMonth","getMonth","numVacationDatesRemaining","dispatch","toggleDate","theme","useThemeContext","StyledCalendarEntry","onClick","StyledTypography","getDate","styled","Typography","p","transitions","fast","border","borderRadius","br1","getBackgroundColor","uiState","colors","accent","cs2","core","neutral","cs3","cs7","cs5","background","monthNames","Calendar","setMonth","console","log","StyledCalendar","style","display","alignItems","justifyContent","marginBottom","Math","max","transform","cursor","sizeVariant","min","InnerCalendar","map","d","filter","cd","spacing","ss4","getVacationPlanUrl","pathname","slice","length","SaveButton","withRouter","getVacationPlan","createVacationPlan","createVacationPlanRequestModel","push","location","useDispatch","colorVariant","DateSelection","numRemainingVacationDates","getSuggestedDates","setNumVacationDates","minHeight","height","width","marginTop","weightVariant","placeholder","value","label","onChange","e","parseInt","currentTarget","margin","Main","backgroundColor","flexDirection","themeInputs","typography","fontFamily","default","hue","saturation","middleLightness","defaultShowBoxShadow","App","getVacationPlanSuccess","useSelector","className","Provider","getThemeFromNewInputs","Boolean","window","hostname","match","getVacationPlanAsync","watchGetVacationPlanAsync","createVacationPlanAsync","watchCreateVacationPlanAsync","updateVacationPlanAsync","watchUpdateVacationPlanAsync","call","axios","get","params","payload","data","put","result","error","takeEvery","post","getFilteredCalendarDates","meta","getType","uiSagas","rootSaga","all","s","fork","isCalendarDateEqual","firstDate","secondDate","getFullYear","isIntermediateShape","input","getCalendarDatesForYear","year","CalendarUtil","getCalendar","intermediateShape","newDate","Date","setUTCDate","day","setUTCMonth","setUTCFullYear","setUTCHours","setUTCMinutes","setUTCSeconds","getCalendarDatesForMonth","getSelectedDate","getEmptyDate","getUpdatedConnectedDates","dates","inputDates","connectedDates","addIfNotExists","some","alreadyExists","func","forEach","getOffsetDate","isNewConnectedDate","offset","getUTCDate","InvalidOperationError","name","Error","Throw","condition","centerVacation","segment","leftMost","i","rightMost","vacationSegment","unshift","addEntriesToSelection","numDates","InvalidIf","Array","fill","numChildSegments","datesPerChildSegment","output","counter","numAdded","getNumVacation","getLastAssignment","getSelectionPossibilities","numAdditionalEntries","possibilities","numVacationOriginal","helper","alreadyAssigned","getAssigned","leftToAssign","lastAssignment","segmentToAssign","assignedSegment","getSpread","distribution","getStdDev","numAssignments","gaps","distanceFromLeft","distanceFromRight","gapCounter","currentIndex","getGaps","array","n","mean","a","b","sqrt","x","pow","getUpdatedSuggestedDates","numVacationDaysToAssign","currentEntries","updatedEntries","selectionSpreads","selection","spread","maximumSpread","find","getMostEvenSelection","isNewlyAdded","currentYear","initialState","hasCheckedForSavedVacationPlan","rootReducer","combineReducers","ADD_DATE","produce","draftState","REMOVE_DATE","sd","foundDateIndex","findIndex","foundDate","getNewDate","SET_YEAR","routing","routerReducer","sagaMiddleware","createSagaMiddleware","store","middleware","routerMiddleware","createHistory","enhancers","intermediateStore","createStore","compose","applyMiddleware","run","configureStore","initialReduxState","defaults","baseURL","ReactDOM","render","history","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4074df5.chunk.js","sourcesContent":["import { action } from 'typesafe-actions';\nimport { EmptyDate } from 'types/EmptyDate';\nimport { SelectedDate } from 'types/SelectedDate';\nimport { SuggestedDate } from 'types/SuggestedDate';\nimport { VacationPlan } from 'types/VacationPlan';\nimport { SaveResponse } from 'types/SaveResponse';\nimport { VacationPlanModel } from 'types/apiContracts/VacationPlanModel';\nimport { CreateVacationPlanRequestModel } from 'types/apiContracts/CreateVacationPlanRequestModel';\n\nexport enum UiActionKeys {\n\tADD_DATE = 'ADD_DATE',\n\tREMOVE_DATE = 'REMOVE_DATE',\n\tTOGGLE_DATE = 'TOGGLE_DATE',\n\tSET_YEAR = 'SET_YEAR',\n\tSET_MONTH = 'SET_MONTH',\n\tGET_SUGGESTED_DATES = 'GET_SUGGESTED_DATES',\n\tSET_NUM_VACATION_DATES = 'SET_NUM_VACATION_DATES',\n\tUPDATE_VACATION_PLAN = 'UPDATE_VACATION_PLAN',\n\tUPDATE_VACATION_PLAN_SUCCESS = 'UPDATE_VACATION_PLAN_SUCCESS',\n\tCREATE_VACATION_PLAN = 'CREATE_VACATION_PLAN',\n\tCREATE_VACATION_PLAN_SUCCESS = 'CREATE_VACATION_PLAN_SUCCESS',\n\tGET_VACATION_PLAN = 'GET_VACATION_PLAN',\n\tGET_VACATION_PLAN_SUCCESS = 'GET_VACATION_PLAN_SUCCESS',\n\tGET_VACATION_PLAN_FAILURE = 'GET_VACATION_PLAN_FAILURE',\n\tDOES_VACATION_PLAN_EXIST_IN_DATABASE = 'DOES_VACATION_PLAN_EXIST_IN_DATABASE',\n\tDOES_VACATION_PLAN_EXIST_IN_DATABASE_SUCCESS = 'DOES_VACATION_PLAN_EXIST_IN_DATABASE_SUCCESS',\n}\n\nconst addDate = (date: EmptyDate) => action(UiActionKeys.ADD_DATE, date);\n\nconst removeDate = (date: SelectedDate) => action(UiActionKeys.REMOVE_DATE, date);\n\nconst toggleDate = (date: EmptyDate | SelectedDate | SuggestedDate) => action(UiActionKeys.TOGGLE_DATE, date);\n\nconst setYear = (year: number) => action(UiActionKeys.SET_YEAR, year);\n\nconst setMonth = (month: number) => action(UiActionKeys.SET_MONTH, month);\n\nconst getSuggestedDates = () => action(UiActionKeys.GET_SUGGESTED_DATES);\n\nconst setNumVacationDates = (numVacationDates: number) => action(UiActionKeys.SET_NUM_VACATION_DATES, numVacationDates);\n\nconst updateVacationPlan = {\n\trequest: (vacationPlan: VacationPlanModel) => action(UiActionKeys.UPDATE_VACATION_PLAN, vacationPlan),\n\tsuccess: (saveResponse: SaveResponse) => action(UiActionKeys.UPDATE_VACATION_PLAN_SUCCESS, saveResponse),\n};\n\nconst createVacationPlan = {\n\trequest: (createVacationPlanModel: CreateVacationPlanRequestModel, callback: (url: string) => void) =>\n\t\taction(UiActionKeys.CREATE_VACATION_PLAN, createVacationPlanModel, callback),\n\tsuccess: (vacationPlanModel: VacationPlanModel) =>\n\t\taction(UiActionKeys.CREATE_VACATION_PLAN_SUCCESS, vacationPlanModel),\n};\n\nconst getVacationPlan = {\n\trequest: (url: string) => action(UiActionKeys.GET_VACATION_PLAN, url),\n\tsuccess: (vacationPlanModel: VacationPlanModel) =>\n\t\taction(UiActionKeys.GET_VACATION_PLAN_SUCCESS, vacationPlanModel),\n\tfailure: (message: string) => action(UiActionKeys.GET_VACATION_PLAN_FAILURE, message),\n};\n\nexport const uiActions = {\n\taddDate,\n\tremoveDate,\n\ttoggleDate,\n\tsetYear,\n\tsetMonth,\n\tgetSuggestedDates,\n\tsetNumVacationDates,\n\tupdateVacationPlan,\n\tgetVacationPlan,\n\tcreateVacationPlan,\n};\n","import { WrappedDate } from 'types/WrappedDate';\n\nexport const isWeekend = (calendarDate: WrappedDate) =>\n\tcalendarDate.date.getDay() === 0 || calendarDate.date.getDay() === 6;\n","import { SelectedDate } from 'types/SelectedDate';\nimport { CalendarDate } from 'types/CalendarDate';\n\nexport const isSelectedDate = (calendarDate: CalendarDate): calendarDate is SelectedDate =>\n\t(calendarDate as SelectedDate).type === 'selected';\n","import { CalendarDate } from 'types/CalendarDate';\nimport { SuggestedDate } from 'types/SuggestedDate';\n\nexport const isSuggestedDate = (calendarDate: CalendarDate): calendarDate is SuggestedDate =>\n\t(calendarDate as SuggestedDate).type === 'suggested';\n","import { EmptyDate } from 'types/EmptyDate';\nimport { CalendarDate } from 'types/CalendarDate';\n\nexport const isEmptyDate = (calendarDate: CalendarDate): calendarDate is EmptyDate =>\n\t(calendarDate as EmptyDate).type === 'empty';\n","import { ConnectedDate } from 'types/ConnectedDate';\nimport { CalendarDate } from 'types/CalendarDate';\n\nexport const isConnectedDate = (calendarDate: CalendarDate): calendarDate is ConnectedDate =>\n\t(calendarDate as ConnectedDate).type === 'connected';\n","import { CalendarDate } from 'types/CalendarDate';\nimport { HolidayDate } from 'types/HolidayDate';\n\nexport const isHolidayDate = (calendarDate: CalendarDate): calendarDate is HolidayDate =>\n\t(calendarDate as HolidayDate).type === 'holiday';\n","import { AppState } from 'reduxUtilities/AppState';\nimport { createSelector } from 'reselect';\nimport { isVacationDate } from 'typeGuards/isVacationDate';\nimport { isSelectedDate } from 'typeGuards/isSelectedDate';\nimport { isSuggestedDate } from 'typeGuards/isSuggestedDate';\n\nconst getUiSlice = (state: AppState) => state.ui;\n\nconst getCalendarDates = (state: AppState) => getUiSlice(state).calendarDates;\n\nconst getNumVacationDates = (state: AppState) => getUiSlice(state).numVacationDates;\n\nexport const numRemainingVacationDatesSelector = createSelector(\n\tgetCalendarDates,\n\tgetNumVacationDates,\n\t(calendarDates, numVacationDates) =>\n\t\tnumVacationDates -\n\t\tcalendarDates.reduce((agg, cur) => {\n\t\t\tif (isSelectedDate(cur) || isSuggestedDate(cur)) {\n\t\t\t\tagg += 1;\n\t\t\t}\n\t\t\treturn agg;\n\t\t}, 0),\n);\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { Typography, useThemeContext, Theme, UIState } from '@nickjmorrow/react-component-library';\nimport { EmptyDate } from 'types/EmptyDate';\nimport { Dispatch } from 'redux';\nimport { uiActions } from 'reduxUtilities/uiActions';\nimport { connect } from 'react-redux';\nimport { AppState } from 'reduxUtilities/AppState';\nimport { isWeekend } from 'utilities/dateUtilities/isWeekend';\nimport { CalendarDate } from 'types/CalendarDate';\nimport { SelectedDate } from 'types/SelectedDate';\nimport { isSelectedDate } from 'typeGuards/isSelectedDate';\nimport { isSuggestedDate } from 'typeGuards/isSuggestedDate';\nimport { isEmptyDate } from 'typeGuards/isEmptyDate';\nimport { isConnectedDate } from 'typeGuards/isConnectedDate';\nimport { isHolidayDate } from 'typeGuards/isHolidayDate';\nimport { SuggestedDate } from 'types/SuggestedDate';\nimport { numRemainingVacationDatesSelector } from 'reduxUtilities/uiSelectors';\n\ninterface OwnProps {\n\tcalendarDate: CalendarDate;\n}\n\nconst CalendarEntryInternal: React.FC<OwnProps &\n\tReturnType<typeof mapStateToProps> &\n\tReturnType<typeof mapDispatchToProps>> = ({\n\tcalendarDate,\n\ttoggleDate,\n\tisInCurrentMonth,\n\tnumVacationDatesRemaining,\n}) => {\n\tconst theme = useThemeContext();\n\treturn (\n\t\t<StyledCalendarEntry\n\t\t\tcalendarDate={calendarDate}\n\t\t\ttheme={theme}\n\t\t\tonClick={() => {\n\t\t\t\tif (\n\t\t\t\t\tisSelectedDate(calendarDate) ||\n\t\t\t\t\t(isEmptyDate(calendarDate) && numVacationDatesRemaining > 0) ||\n\t\t\t\t\tisSuggestedDate(calendarDate)\n\t\t\t\t) {\n\t\t\t\t\ttoggleDate(calendarDate);\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t<StyledTypography isInCurrentMonth={isInCurrentMonth}>{calendarDate.date.getDate()}</StyledTypography>\n\t\t</StyledCalendarEntry>\n\t);\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\ttoggleDate: (calendarDate: EmptyDate | SelectedDate | SuggestedDate) =>\n\t\tdispatch(uiActions.toggleDate(calendarDate)),\n});\n\nconst mapStateToProps = (state: AppState, ownProps: OwnProps) => ({\n\tisInCurrentMonth: state.ui.currentMonth === ownProps.calendarDate.date.getMonth(),\n\tnumVacationDatesRemaining: numRemainingVacationDatesSelector(state),\n});\n\nexport const CalendarEntry = connect(mapStateToProps, mapDispatchToProps)(CalendarEntryInternal);\n\n// css\nconst StyledTypography = styled(Typography)<{ isInCurrentMonth: boolean }>`\n\tcolor: ${p => (p.isInCurrentMonth ? 'black' : 'gray')};\n`;\n\nconst StyledCalendarEntry = styled('div')<{\n\ttheme: Theme;\n\tcalendarDate: CalendarDate;\n}>`\n\twidth: 40px;\n\theight: 40px;\n\tmargin: 4px;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tcursor: ${p => p => (isWeekend(p.calendarDate) ? 'not-allowed' : 'pointer')};\n\ttransition: background-color ${p => p.theme.transitions.fast};\n\tborder-radius: ${p => p.theme.border.borderRadius.br1};\n\tbackground-color: ${p => getBackgroundColor('normal', p.calendarDate, p.theme)};\n\t&:hover {\n\t\tbackground-color: ${p => getBackgroundColor('hover', p.calendarDate, p.theme)};\n\t\ttransition: background-color ${p => p.theme.transitions.fast};\n\t}\n\t&:focus {\n\t\tbackground-color: ${p => getBackgroundColor('active', p.calendarDate, p.theme)};\n\t\ttransition: background-color ${p => p.theme.transitions.fast};\n\t}\n`;\n\nconst getBackgroundColor = (uiState: UIState, calendarDate: CalendarDate, theme: Theme) => {\n\tif (isConnectedDate(calendarDate)) {\n\t\treturn theme.colors.accent.cs2;\n\t}\n\tif (isHolidayDate(calendarDate)) {\n\t\treturn theme.colors.core.cs2;\n\t}\n\tif (isWeekend(calendarDate)) {\n\t\treturn theme.colors.neutral.cs3;\n\t}\n\tif (isSuggestedDate(calendarDate)) {\n\t\treturn theme.colors.accent.cs7;\n\t}\n\n\tif (uiState === 'active' || isSelectedDate(calendarDate)) {\n\t\treturn theme.colors.accent.cs5;\n\t}\n\n\tif (uiState === 'hover') {\n\t\treturn theme.colors.accent.cs2;\n\t}\n\n\treturn theme.colors.background;\n};\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { Dispatch } from 'redux';\nimport { useThemeContext, Typography, ChevronUpIcon } from '@nickjmorrow/react-component-library';\nimport { Theme } from '@nickjmorrow/react-component-library/dist/typeUtilities';\nimport { AppState } from 'reduxUtilities/AppState';\nimport { uiActions } from 'reduxUtilities/uiActions';\nimport { CalendarEntry } from 'components/CalendarEntry';\n\nimport { connect } from 'react-redux';\n\nconst monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nconst CalendarInternal: React.FC<ReturnType<typeof mapDispatchToProps> & ReturnType<typeof mapStateToProps>> = ({\n\tcurrentMonth,\n\tcalendarDates,\n\tsetMonth,\n}) => {\n\tconst theme = useThemeContext();\n\tconsole.log(calendarDates);\n\treturn (\n\t\t<StyledCalendar theme={theme}>\n\t\t\t<div\n\t\t\t\tstyle={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '8px' }}\n\t\t\t>\n\t\t\t\t<ChevronUpIcon\n\t\t\t\t\tonClick={() => setMonth(Math.max(0, currentMonth - 1))}\n\t\t\t\t\tstyle={{ transform: 'rotate(-90deg)', cursor: 'pointer' }}\n\t\t\t\t/>\n\t\t\t\t<Typography sizeVariant={5}>{monthNames[currentMonth]}</Typography>\n\t\t\t\t<ChevronUpIcon\n\t\t\t\t\tstyle={{ transform: 'rotate(90deg)', cursor: 'pointer' }}\n\t\t\t\t\tonClick={() => setMonth(Math.min(11, currentMonth + 1))}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<InnerCalendar theme={theme}>\n\t\t\t\t{['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(d => (\n\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n\t\t\t\t\t\t<Typography sizeVariant={1}>{d}</Typography>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\n\t\t\t\t{calendarDates\n\t\t\t\t\t.filter(cd => cd.date.getMonth() === currentMonth)\n\t\t\t\t\t.map(d => (\n\t\t\t\t\t\t<CalendarEntry calendarDate={d} />\n\t\t\t\t\t))}\n\t\t\t</InnerCalendar>\n\t\t</StyledCalendar>\n\t);\n};\n\n// redux\nconst mapStateToProps = (state: AppState) => ({\n\tcurrentMonth: state.ui.currentMonth,\n\tcalendarDates: state.ui.calendarDates,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tsetMonth: (month: number) => dispatch(uiActions.setMonth(month)),\n});\n\nexport const Calendar = connect(mapStateToProps, mapDispatchToProps)(CalendarInternal);\n\n// css\nconst StyledCalendar = styled('div')<{ theme: Theme }>`\n\tbackground-color: white;\n\tborder-radius: ${p => p.theme.border.borderRadius.br1};\n\tpadding: ${p => p.theme.spacing.ss4};\n`;\n\nconst InnerCalendar = styled('div')<{ theme: Theme }>`\n\tdisplay: grid;\n\tgrid-template-columns: repeat(7, 1fr);\n\twidth: min-content;\n`;\n","export const getVacationPlanUrl = (pathname: string) => {\n\treturn pathname.slice(1, pathname.length);\n};\n","import { Button } from '@nickjmorrow/react-component-library';\nimport * as React from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { AppState } from 'reduxUtilities/AppState';\nimport { uiActions } from 'reduxUtilities/uiActions';\nimport { CreateVacationPlanRequestModel } from 'types/apiContracts/CreateVacationPlanRequestModel';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { getVacationPlanUrl } from 'utilities/getVacationPlanUrl';\nimport { push } from 'react-router-redux';\n\nconst SaveButtonInternal: React.FC<ReturnType<typeof mapStateToProps> &\n\tReturnType<typeof mapDispatchToProps> &\n\tRouteComponentProps> = ({ calendarDates, getVacationPlan, createVacationPlan, location }) => {\n\tconst dispatch = useDispatch();\n\tconst url = getVacationPlanUrl(location.pathname);\n\n\tconst updateVacationPlan = () => dispatch(uiActions.updateVacationPlan.request({ url, calendarDates }));\n\n\treturn (\n\t\t<>\n\t\t\t<Button colorVariant={'accent'} onClick={() => getVacationPlan('some_url')}>\n\t\t\t\tGet\n\t\t\t</Button>\n\t\t\t<Button colorVariant={'accent'} onClick={() => createVacationPlan({ calendarDates })}>\n\t\t\t\tCreate\n\t\t\t</Button>\n\t\t\t<Button colorVariant={'accent'} onClick={() => updateVacationPlan()}>\n\t\t\t\tUpdate\n\t\t\t</Button>\n\t\t</>\n\t);\n};\n\nconst mapStateToProps = (state: AppState) => ({\n\tcalendarDates: state.ui.calendarDates,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tgetVacationPlan: (url: string) => dispatch(uiActions.getVacationPlan.request(url)),\n\tcreateVacationPlan: (createVacationPlanRequestModel: CreateVacationPlanRequestModel) =>\n\t\tdispatch(\n\t\t\tuiActions.createVacationPlan.request(createVacationPlanRequestModel, (url: string) => dispatch(push(url))),\n\t\t),\n});\n\nexport const SaveButton = withRouter(connect(mapStateToProps, mapDispatchToProps)(SaveButtonInternal));\n","import * as React from 'react';\nimport { Calendar } from 'components/Calendar';\nimport { ChevronUpIcon, TextInput, Button, Typography } from '@nickjmorrow/react-component-library';\nimport { Analytics } from 'components/Analytics';\nimport { Dispatch } from 'redux';\nimport { uiActions } from 'reduxUtilities/uiActions';\nimport { connect } from 'react-redux';\nimport { AppState } from 'reduxUtilities/AppState';\nimport { numRemainingVacationDatesSelector } from 'reduxUtilities/uiSelectors';\nimport { SaveButton } from 'components/SaveButton';\n\nconst DateSelectionInternal: React.FC<ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>> = ({\n\tgetSuggestedDates,\n\tnumVacationDates,\n\tsetNumVacationDates,\n\tnumRemainingVacationDates,\n}) => {\n\treturn (\n\t\t<div style={{ minHeight: '100vh' }}>\n\t\t\t<div style={{ height: '200px', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tborder: '1px solid white',\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\theight: '43px',\n\t\t\t\t\t\twidth: '40px',\n\t\t\t\t\t\tborderRadius: '40px',\n\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<ChevronUpIcon colorVariant={'primaryLight'} sizeVariant={4} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Calendar />\n\t\t\t{/* <Analytics /> */}\n\t\t\t<div style={{ marginTop: '40px' }}>\n\t\t\t\t<Typography colorVariant={'primaryLight'} sizeVariant={4} weightVariant={7}>\n\t\t\t\t\tCalculation Inputs\n\t\t\t\t</Typography>\n\t\t\t\t<TextInput\n\t\t\t\t\tplaceholder={'Total Available Dates'}\n\t\t\t\t\tvalue={numVacationDates}\n\t\t\t\t\tlabel={`Vacation Days (${numRemainingVacationDates} remaining)`}\n\t\t\t\t\ttype={'number'}\n\t\t\t\t\tstyle={{ marginTop: '16px' }}\n\t\t\t\t\tonChange={e => setNumVacationDates(parseInt(e.currentTarget.value, 10))}\n\t\t\t\t/>\n\n\t\t\t\t<Button onClick={() => getSuggestedDates()} colorVariant={'accent'} style={{ margin: '16px 0' }}>\n\t\t\t\t\tCalculate\n\t\t\t\t</Button>\n\t\t\t\t<SaveButton />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = (state: AppState) => ({\n\tnumVacationDates: state.ui.numVacationDates,\n\tnumRemainingVacationDates: numRemainingVacationDatesSelector(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tgetSuggestedDates: () => dispatch(uiActions.getSuggestedDates()),\n\tsetNumVacationDates: (numVacationDates: number) => dispatch(uiActions.setNumVacationDates(numVacationDates)),\n});\n\nexport const DateSelection = connect(mapStateToProps, mapDispatchToProps)(DateSelectionInternal);\n","import * as React from 'react';\nimport { DateSelection } from 'components/DateSelection';\nimport { useThemeContext } from '@nickjmorrow/react-component-library';\n\nexport const Main: React.FC = () => {\n\tconst theme = useThemeContext();\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tbackgroundColor: theme.colors.core.cs5,\n\t\t\t\theight: '100%',\n\t\t\t\tmargin: 0,\n\t\t\t\tdisplay: 'flex',\n\t\t\t\talignItems: 'center',\n\t\t\t\tjustifyContent: 'center',\n\t\t\t\tflexDirection: 'column',\n\t\t\t}}\n\t\t>\n\t\t\t<DateSelection />\n\t\t</div>\n\t);\n};\n","import {\n\tArgumentType,\n\tgetThemeFromNewInputs,\n\tThemeContext,\n\tupdateThemeInputs,\n} from '@nickjmorrow/react-component-library';\nimport { Main } from 'components/Main';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { RootState } from 'reduxUtilities/rootReducer';\nimport { uiActions } from 'reduxUtilities/uiActions';\nimport { getVacationPlanUrl } from 'utilities/getVacationPlanUrl';\nimport './App.css';\n\nconst themeInputs: ArgumentType<typeof updateThemeInputs>[0] = {\n\ttypography: {\n\t\tfontFamily: {\n\t\t\tdefault: 'Overpass, sans-serif',\n\t\t},\n\t},\n\tcolors: {\n\t\tcore: {\n\t\t\thue: 260,\n\t\t\tsaturation: 100,\n\t\t},\n\t\taccent: {\n\t\t\thue: 50,\n\t\t\tmiddleLightness: 47,\n\t\t\tsaturation: 90,\n\t\t},\n\t},\n\tdefaultShowBoxShadow: false,\n};\n\nconst AppInternal: React.FC<RouteComponentProps> = ({ location }) => {\n\tconst { getVacationPlanSuccess } = useSelector((state: RootState) => state.ui);\n\tconst dispatch = useDispatch();\n\n\tconst { pathname } = location;\n\n\tconst url = getVacationPlanUrl(pathname);\n\n\tconst mayBeSavedVacationPlan = url !== '';\n\n\t// check if url exists in database\n\tif (mayBeSavedVacationPlan && getVacationPlanSuccess === null) {\n\t\tconst getVacationPlan = dispatch(uiActions.getVacationPlan.request(url));\n\t\tconst doesUrlExistInDatabase = false;\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<ThemeContext.Provider value={getThemeFromNewInputs(themeInputs)}>\n\t\t\t\t<Main />\n\t\t\t</ThemeContext.Provider>\n\t\t</div>\n\t);\n};\n\nexport const App = withRouter(AppInternal);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA',\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import axios from 'axios';\nimport { call, put, takeEvery, actionChannel } from 'redux-saga/effects';\nimport { uiActions, UiActionKeys } from 'reduxUtilities/uiActions';\nimport { CalendarDate } from 'types/CalendarDate';\nimport { CalendarDateModel } from 'types/apiContracts/CalendarDateModel';\nimport { push } from 'react-router-redux';\n\nfunction* getVacationPlanAsync(action: ReturnType<typeof uiActions.updateVacationPlan.request>) {\n\ttry {\n\t\tconst { data } = yield call(axios.get, `/vacationPlans`, {\n\t\t\tparams: {\n\t\t\t\turl: action.payload,\n\t\t\t},\n\t\t});\n\t\tyield put(uiActions.getVacationPlan.success(data.result.value));\n\t} catch (error) {\n\t\tconsole.error(error);\n\t\tyield put(uiActions.getVacationPlan.failure(error));\n\t}\n}\n\nfunction* watchGetVacationPlanAsync() {\n\tyield takeEvery(UiActionKeys.GET_VACATION_PLAN, getVacationPlanAsync);\n}\n\nfunction* createVacationPlanAsync(action: ReturnType<typeof uiActions.createVacationPlan.request>) {\n\ttry {\n\t\tconst { data } = yield call(axios.post, '/vacationPlans', {\n\t\t\t...action.payload,\n\t\t\tcalendarDates: getFilteredCalendarDates(action.payload.calendarDates),\n\t\t});\n\n\t\taction.meta(data.url);\n\n\t\tyield put(uiActions.createVacationPlan.success(data));\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n}\n\nfunction* watchCreateVacationPlanAsync() {\n\tyield takeEvery(UiActionKeys.CREATE_VACATION_PLAN, createVacationPlanAsync);\n}\n\nconst getType = (type: CalendarDate['type']) => {\n\tswitch (type) {\n\t\tcase 'empty':\n\t\t\treturn 'empty';\n\t\tcase 'selected':\n\t\t\treturn 'selected';\n\t\tcase 'holiday':\n\t\t\treturn 'holiday';\n\t\tdefault:\n\t\t\treturn 'empty';\n\t}\n};\n\nconst getFilteredCalendarDates = (calendarDates: CalendarDate[]) =>\n\tcalendarDates.map(cd => ({ ...cd, type: getType(cd.type) }));\n\nfunction* updateVacationPlanAsync(action: ReturnType<typeof uiActions.updateVacationPlan.request>) {\n\ttry {\n\t\tconst { data } = yield call(axios.put, '/vacationPlans', {\n\t\t\t...action.payload,\n\t\t\tcalendarDates: getFilteredCalendarDates(action.payload.calendarDates),\n\t\t});\n\t\tyield put(uiActions.updateVacationPlan.success(data));\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n}\n\nfunction* watchUpdateVacationPlanAsync() {\n\tyield takeEvery(UiActionKeys.UPDATE_VACATION_PLAN, updateVacationPlanAsync);\n}\n\nexport const uiSagas = [watchUpdateVacationPlanAsync, watchGetVacationPlanAsync, watchCreateVacationPlanAsync];\n","import { all, fork } from 'redux-saga/effects';\nimport { uiSagas } from 'reduxUtilities/uiSagas';\n\nexport function* rootSaga() {\n\tyield all(uiSagas.map(s => fork(s)));\n}\n","interface WrappedDate {\n\tdate: Date;\n}\n\nexport const isCalendarDateEqual = (firstDate: WrappedDate, secondDate: WrappedDate) => {\n\treturn (\n\t\tfirstDate.date.getDate() === secondDate.date.getDate() &&\n\t\tfirstDate.date.getMonth() === secondDate.date.getMonth() &&\n\t\tfirstDate.date.getFullYear() === secondDate.date.getFullYear()\n\t);\n};\n\nexport {};\n","import { Calendar as CalendarUtil } from 'calendar-base';\nimport { EmptyDate } from 'types/EmptyDate';\n\nexport const getCalendarDatesForMonth = (year: number, month: number): EmptyDate[] => {\n\tconst calendarUtil = new CalendarUtil();\n\n\tconst days = calendarUtil.getCalendar(year, month);\n\tconst toCalendarDate = (intermediateShape: IntermediateShape): EmptyDate => {\n\t\tconst newDate = new Date();\n\n\t\t// JS date is 0-indexed\n\t\tnewDate.setUTCDate(intermediateShape.day);\n\t\tnewDate.setUTCMonth(intermediateShape.month);\n\t\tnewDate.setUTCFullYear(intermediateShape.year);\n\t\tnewDate.setUTCHours(0);\n\t\tnewDate.setUTCMinutes(0);\n\t\tnewDate.setUTCSeconds(0);\n\t\treturn { date: newDate, type: 'empty' };\n\t};\n\n\tconst calendarDates = days.filter(isIntermediateShape).map(toCalendarDate);\n\n\t// if (month === 0) {\n\t// \tconsole.log(calendarDates);\n\t// }\n\treturn calendarDates;\n};\n\nfunction isIntermediateShape(input: false | IntermediateShape): input is IntermediateShape {\n\treturn input !== false;\n}\n\nexport interface IntermediateShape {\n\tday: number;\n\tweekDay: number;\n\tmonth: number;\n\tyear: number;\n}\n","import { getCalendarDatesForMonth } from 'utilities/getCalendarDatesForMonth';\nimport { EmptyDate } from 'types/EmptyDate';\nimport { CalendarDate } from 'types/CalendarDate';\n\nexport const getCalendarDatesForYear = (year: number): CalendarDate[] =>\n\t[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].reduce<EmptyDate[]>((agg, month) => {\n\t\tagg = [...agg, ...getCalendarDatesForMonth(year, month)];\n\t\treturn agg;\n\t}, []);\n","import { SelectedDate } from 'types/SelectedDate';\nimport { CalendarDate } from 'types/CalendarDate';\n\nexport const getSelectedDate = (calendarDate: CalendarDate): SelectedDate => ({\n\t...calendarDate,\n\ttype: 'selected',\n});\n","import { CalendarDate } from 'types/CalendarDate';\nimport { EmptyDate } from 'types/EmptyDate';\n\nexport const getEmptyDate = (calendarDate: CalendarDate): EmptyDate => ({\n\t...calendarDate,\n\ttype: 'empty',\n});\n","import { getConnectedDate } from 'dateTypeProviders/getConnectedDate';\nimport { isConnectedDate } from 'typeGuards/isConnectedDate';\nimport { CalendarDate } from 'types/CalendarDate';\nimport { ConnectedDate } from 'types/ConnectedDate';\nimport { WrappedDate } from 'types/WrappedDate';\nimport { getEmptyDate } from 'dateTypeProviders/getEmptyDate';\nimport { isCalendarDateEqual } from 'utilities/isCalendarDateEqual';\nimport { isVacationDate } from 'typeGuards/isVacationDate';\n\nexport const getUpdatedConnectedDates = (dates: CalendarDate[]): CalendarDate[] => {\n\tconst inputDates = dates.map(d => (isConnectedDate(d) ? getEmptyDate(d) : d));\n\tconst connectedDates: ConnectedDate[] = [];\n\n\tconst alreadyExists = (newDate: WrappedDate) => connectedDates.some(cd => isCalendarDateEqual(cd, newDate));\n\tconst asConnectedDate = (calendarDate: WrappedDate): ConnectedDate => ({ ...calendarDate, type: 'connected' });\n\tconst addIfNotExists = (newDate: WrappedDate) =>\n\t\t!alreadyExists(newDate) && connectedDates.push(asConnectedDate(newDate));\n\n\tinputDates\n\t\t.filter(d => isVacationDate(d))\n\t\t.forEach(d => {\n\t\t\tif (d.date.getDay() === 5) {\n\t\t\t\taddIfNotExists({ date: getOffsetDate(d.date, 1) });\n\t\t\t\taddIfNotExists({ date: getOffsetDate(d.date, 2) });\n\t\t\t}\n\t\t\tif (d.date.getDay() === 1) {\n\t\t\t\taddIfNotExists({ date: getOffsetDate(d.date, -1) });\n\t\t\t\taddIfNotExists({ date: getOffsetDate(d.date, -2) });\n\t\t\t}\n\t\t});\n\n\tconst isNewConnectedDate = (date: CalendarDate) => connectedDates.some(cd => isCalendarDateEqual(cd, date));\n\n\tconst convertDate = (date: CalendarDate): CalendarDate => {\n\t\tif (isNewConnectedDate(date)) {\n\t\t\treturn getConnectedDate(date);\n\t\t}\n\n\t\t// was connected, now it is empty\n\t\tif (isConnectedDate(date)) {\n\t\t\treturn getEmptyDate(date);\n\t\t}\n\n\t\treturn date;\n\t};\n\n\treturn inputDates.map(convertDate);\n};\n\nconst getOffsetDate = (date: Date, offset: number) => {\n\tconst newDate = new Date(date);\n\tnewDate.setUTCDate(date.getUTCDate() + offset);\n\treturn newDate;\n};\n","import { VacationDate } from 'types/VacationDate';\nimport { CalendarDate } from 'types/CalendarDate';\nimport { isSelectedDate } from 'typeGuards/isSelectedDate';\nimport { isHolidayDate } from 'typeGuards/isHolidayDate';\nimport { isConnectedDate } from 'typeGuards/isConnectedDate';\nimport { isSuggestedDate } from 'typeGuards/isSuggestedDate';\n\nexport const isVacationDate = (calendarDate: CalendarDate): calendarDate is VacationDate =>\n\t[isSelectedDate, isHolidayDate, isConnectedDate, isSuggestedDate].some(func => func(calendarDate));\n","import { CalendarDate } from 'types/CalendarDate';\nimport { ConnectedDate } from 'types/ConnectedDate';\n\nexport const getConnectedDate = (calendarDate: CalendarDate): ConnectedDate => ({\n\t...calendarDate,\n\ttype: 'connected',\n});\n","class InvalidOperationError extends Error {\n\tname = 'InvalidOperationError';\n\tpublic constructor(message: string) {\n\t\tsuper(message);\n\t}\n}\n\nexport class Throw {\n\tpublic static InvalidIf(condition: boolean, message: string) {\n\t\tif (condition) {\n\t\t\tthrow new InvalidOperationError(message);\n\t\t}\n\t}\n}\n","export const centerVacation = (segment: boolean[]): boolean[] => {\n\tlet leftMost = -1;\n\n\tfor (let i = 0; i < segment.length; i++) {\n\t\tif (segment[i]) {\n\t\t\tleftMost = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tlet rightMost = -1;\n\n\tfor (let i = segment.length; i >= 0; i--) {\n\t\tif (segment[i]) {\n\t\t\trightMost = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tconst vacationSegment = segment.slice(leftMost, rightMost + 1);\n\n\twhile (vacationSegment.length < segment.length) {\n\t\tvacationSegment.unshift(false);\n\n\t\tif (vacationSegment.length === segment.length) {\n\t\t\tbreak;\n\t\t}\n\n\t\tvacationSegment.push(false);\n\t}\n\n\treturn vacationSegment;\n};\n","import { Throw } from 'utilities/Throw';\nimport { centerVacation } from 'utilities/centerVacation';\n\nexport const addEntriesToSelection = (segment: false[], numDates: number): boolean[] => {\n\tThrow.InvalidIf(segment.length === 0, 'Segment must not be empty.');\n\tThrow.InvalidIf(\n\t\tnumDates > segment.length,\n\t\t`Number of dates (${numDates}) exceeds segment length (${segment.length}).`,\n\t);\n\n\tThrow.InvalidIf(numDates < 0, `Number of dates (${numDates}) must be greater than 0.`);\n\n\tif (numDates === segment.length) {\n\t\treturn Array(numDates).fill(true);\n\t}\n\n\tif (numDates === 0) {\n\t\treturn [...segment];\n\t}\n\n\tconst numChildSegments = numDates + 1;\n\tconst datesPerChildSegment = segment.length / numChildSegments;\n\tconst output: boolean[] = [];\n\tlet counter = 1;\n\tlet numAdded = 0;\n\tfor (let i = 0; i < segment.length; i++) {\n\t\tif (numAdded === numDates) {\n\t\t\toutput.push(false);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (segment.length - i <= numDates - numAdded) {\n\t\t\toutput.push(true);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (counter >= datesPerChildSegment) {\n\t\t\tcounter = 0;\n\t\t\tnumAdded += 1;\n\t\t\toutput.push(true);\n\t\t} else {\n\t\t\toutput.push(false);\n\t\t}\n\t\tcounter += 1;\n\t}\n\treturn centerVacation(output);\n};\n","import { addEntriesToSelection } from 'utilities/assignVacationToSegment';\nimport { centerVacation } from 'utilities/centerVacation';\n\nexport const getNumVacation = (segment: boolean[]) => {\n\treturn segment.reduce((agg, cur) => {\n\t\tif (cur) {\n\t\t\tagg += 1;\n\t\t}\n\t\treturn agg;\n\t}, 0);\n};\n\nconst getLastAssignment = (segment: boolean[]): number => {\n\tfor (let i = segment.length; i >= 0; i--) {\n\t\tif (segment[i]) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1; // this may not be right\n};\n\nexport const getSelectionPossibilities = (segment: boolean[], numAdditionalEntries: number): boolean[][] => {\n\tconst possibilities: boolean[][] = [];\n\n\tconst numVacationOriginal = getNumVacation(segment);\n\n\tconst getAssigned = (segment: boolean[]) => getNumVacation(segment) - numVacationOriginal;\n\n\tconst helper = (segment: boolean[]): void => {\n\t\tconst alreadyAssigned = getAssigned(segment);\n\t\tif (alreadyAssigned === numAdditionalEntries) {\n\t\t\tpossibilities.push(centerVacation(segment));\n\t\t\treturn;\n\t\t}\n\t\tconst leftToAssign = numAdditionalEntries - alreadyAssigned;\n\t\tfor (let i = 1; i <= leftToAssign; i++) {\n\t\t\tconst lastAssignment = getLastAssignment(segment);\n\t\t\tconst segmentToAssign = segment.slice(lastAssignment + 1, segment.length);\n\n\t\t\t// short-circuit, cannot assign enough\n\t\t\tif (i > segmentToAssign.length) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst assignedSegment = addEntriesToSelection(segmentToAssign as false[], i);\n\t\t\tconst newSegment = [\n\t\t\t\t...segment.slice(0, lastAssignment === -1 ? 0 : lastAssignment + 1),\n\t\t\t\t...assignedSegment,\n\t\t\t\t...segment.slice(\n\t\t\t\t\t(lastAssignment === -1 ? 0 : lastAssignment) + assignedSegment.length + 1,\n\t\t\t\t\tsegment.length,\n\t\t\t\t),\n\t\t\t];\n\t\t\thelper(newSegment);\n\t\t}\n\t};\n\n\thelper(segment);\n\n\treturn possibilities;\n};\n","import { getGaps } from 'utilities/evenSelectionCreation/getGaps';\n\nexport const getSpread = (distribution: boolean[]): number => {\n\treturn 1 / getStdDev(getGaps(distribution));\n};\n\nconst getStdDev = (array: number[]) => {\n\tconst n = array.length;\n\tconst mean = array.reduce((a, b) => a + b) / n;\n\tconst s = Math.sqrt(array.map(x => Math.pow(x - mean, 2)).reduce((a, b) => a + b) / n);\n\treturn s;\n};\n","import { Throw } from 'utilities/Throw';\n\nexport const getGaps = (distribution: boolean[]): number[] => {\n\tconst numAssignments = distribution.reduce((agg, cur) => {\n\t\tif (cur) {\n\t\t\tagg += 1;\n\t\t}\n\t\treturn agg;\n\t}, 0);\n\n\tThrow.InvalidIf(numAssignments <= 1, `Number of assignments must be greater than 1, but was ${numAssignments}.`);\n\n\tif (distribution.length === numAssignments) {\n\t\treturn [];\n\t}\n\n\tconst gaps: number[] = [];\n\n\tlet distanceFromLeft = 0;\n\n\tfor (let i = 0; i < distribution.length; i++) {\n\t\tif (distribution[i]) {\n\t\t\tbreak;\n\t\t}\n\t\tdistanceFromLeft += 1;\n\t}\n\n\tlet distanceFromRight = 0;\n\n\tfor (let i = distribution.length - 1; i >= 0; i--) {\n\t\tif (distribution[i]) {\n\t\t\tbreak;\n\t\t}\n\t\tdistanceFromRight += 1;\n\t}\n\n\tfor (let i = 0; i < distribution.length; i++) {\n\t\tif (distribution[i] && !distribution[i - 1]) {\n\t\t\tlet gapCounter = 0;\n\t\t\tlet currentIndex = i;\n\t\t\twhile (true) {\n\t\t\t\tgapCounter += 1;\n\t\t\t\tcurrentIndex -= 1;\n\t\t\t\tif (distribution[currentIndex]) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (currentIndex <= 0) {\n\t\t\t\t\tgapCounter += distanceFromRight;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tgaps.push(gapCounter);\n\t\t}\n\t}\n\n\tfor (let i = distribution.length; i >= 0; i--) {\n\t\tif (distribution[i] && !distribution[i + 1]) {\n\t\t\tlet gapCounter = 0;\n\t\t\tlet currentIndex = i;\n\t\t\twhile (true) {\n\t\t\t\tgapCounter += 1;\n\t\t\t\tcurrentIndex += 1;\n\t\t\t\tif (distribution[currentIndex]) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (currentIndex >= distribution.length - 1) {\n\t\t\t\t\tgapCounter += distanceFromLeft;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tgaps.push(gapCounter);\n\t\t}\n\t}\n\n\treturn gaps;\n};\n","import { CalendarDate } from 'types/CalendarDate';\nimport { getSuggestedDate } from 'dateTypeProviders/getSuggestedDate';\nimport { getMostEvenSelection } from 'utilities/evenSelectionCreation/getMostEvenSelection';\nimport { isSelectedDate } from 'typeGuards/isSelectedDate';\n\nexport const getUpdatedSuggestedDates = (dates: CalendarDate[], numVacationDaysToAssign: number): CalendarDate[] => {\n\tconst currentEntries = dates.map(isSelectedDate);\n\tconst updatedEntries = getMostEvenSelection(currentEntries, numVacationDaysToAssign);\n\tconst isNewlyAdded = currentEntries.map((cd, i) => updatedEntries[i] && cd !== updatedEntries[i]);\n\treturn dates.map((d, i) => {\n\t\treturn isNewlyAdded[i] ? getSuggestedDate(d) : d;\n\t});\n};\n","import { getSelectionPossibilities } from 'utilities/evenSelectionCreation/getSelectionPossibilities';\nimport { getSpread } from 'utilities/evenSelectionCreation/getSpread';\n\nexport const getMostEvenSelection = (input: boolean[], numAdditionalEntries: number): boolean[] => {\n\tconst possibilities = getSelectionPossibilities(input, numAdditionalEntries);\n\n\tconst selectionSpreads = possibilities.map(s => ({\n\t\tselection: s,\n\t\tspread: getSpread(s),\n\t}));\n\n\tconst maximumSpread = Math.max(...selectionSpreads.map(s => s.spread));\n\treturn selectionSpreads.find(s => s.spread === maximumSpread)!.selection;\n};\n","import { WrappedDate } from 'types/WrappedDate';\nimport { SuggestedDate } from 'types/SuggestedDate';\n\nexport const getSuggestedDate = (calendarDate: WrappedDate): SuggestedDate => ({\n\t...calendarDate,\n\ttype: 'suggested',\n});\n","import { ActionType } from 'typesafe-actions';\nimport { produce } from 'immer';\nimport { uiActions, UiActionKeys } from 'reduxUtilities/uiActions';\nimport { isCalendarDateEqual } from 'utilities/isCalendarDateEqual';\nimport { getCalendarDatesForYear } from 'utilities/getCalendarDatesForYear';\nimport { isSelectedDate } from 'typeGuards/isSelectedDate';\nimport { getSelectedDate } from 'dateTypeProviders/getSelectedDate';\nimport { getEmptyDate } from 'dateTypeProviders/getEmptyDate';\nimport { getUpdatedConnectedDates } from 'utilities/getUpdatedConnectedDates';\nimport { getCurrentYear } from 'utilities/dateUtilities/getCurrentYear';\nimport { getUpdatedSuggestedDates } from 'utilities/getUpdatedSuggestedDates';\nimport { isEmptyDate } from 'typeGuards/isEmptyDate';\nimport { isSuggestedDate } from 'typeGuards/isSuggestedDate';\nimport { numRemainingVacationDatesSelector } from 'reduxUtilities/uiSelectors';\n\nexport type UiState = Readonly<typeof initialState>;\n\nconst currentYear = getCurrentYear();\nconst thisYearsDates = getCalendarDatesForYear(currentYear);\n\nconst initialState = {\n\tcalendarDates: thisYearsDates,\n\tcurrentMonth: 0,\n\tcurrentYear,\n\tnumVacationDates: 10,\n\thasCheckedForSavedVacationPlan: false,\n\tgetVacationPlanSuccess: null as true | false | null,\n};\n\nexport const uiReducer = (state: UiState = initialState, action: ActionType<typeof uiActions>) => {\n\tswitch (action.type) {\n\t\tcase UiActionKeys.ADD_DATE:\n\t\t\treturn produce(state, draftState => {\n\t\t\t\tdraftState.calendarDates = getUpdatedConnectedDates(\n\t\t\t\t\tdraftState.calendarDates.map(cd =>\n\t\t\t\t\t\tisCalendarDateEqual(cd, action.payload) ? getSelectedDate(cd) : cd,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t});\n\t\tcase UiActionKeys.REMOVE_DATE:\n\t\t\treturn produce(state, draftState => {\n\t\t\t\tdraftState.calendarDates = getUpdatedConnectedDates(\n\t\t\t\t\tdraftState.calendarDates.map(sd =>\n\t\t\t\t\t\tisCalendarDateEqual(sd, action.payload) ? getEmptyDate(sd) : sd,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t});\n\t\tcase UiActionKeys.TOGGLE_DATE:\n\t\t\treturn produce(state, draftState => {\n\t\t\t\tconst foundDateIndex = draftState.calendarDates.findIndex(sd =>\n\t\t\t\t\tisCalendarDateEqual(sd, action.payload),\n\t\t\t\t);\n\t\t\t\tconst foundDate = draftState.calendarDates[foundDateIndex];\n\n\t\t\t\tif (!isEmptyDate(foundDate) && !isSelectedDate(foundDate) && !isSuggestedDate(foundDate)) {\n\t\t\t\t\tthrow new Error('Unexpected date type was toggled.');\n\t\t\t\t}\n\n\t\t\t\tconst getNewDate = (date: typeof action.payload) => {\n\t\t\t\t\tswitch (date.type) {\n\t\t\t\t\t\tcase 'empty':\n\t\t\t\t\t\t\treturn getSelectedDate(date);\n\t\t\t\t\t\tcase 'selected':\n\t\t\t\t\t\t\treturn getEmptyDate(date);\n\t\t\t\t\t\tcase 'suggested':\n\t\t\t\t\t\t\treturn getSelectedDate(date);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new Error('Should never get here.');\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tdraftState.calendarDates[foundDateIndex] = getNewDate(foundDate);\n\n\t\t\t\tdraftState.calendarDates = getUpdatedConnectedDates(draftState.calendarDates);\n\t\t\t});\n\t\tcase UiActionKeys.SET_MONTH:\n\t\t\treturn produce(state, draftState => {\n\t\t\t\tdraftState.currentMonth = action.payload;\n\t\t\t});\n\t\tcase UiActionKeys.SET_YEAR:\n\t\t\treturn produce(state, draftState => {\n\t\t\t\tdraftState.currentYear = action.payload;\n\t\t\t\tdraftState.calendarDates = getUpdatedConnectedDates(getCalendarDatesForYear(action.payload));\n\t\t\t});\n\t\tcase UiActionKeys.GET_SUGGESTED_DATES:\n\t\t\treturn produce(state, draftState => {\n\t\t\t\tdraftState.calendarDates = getUpdatedConnectedDates(\n\t\t\t\t\tgetUpdatedSuggestedDates(state.calendarDates, numRemainingVacationDatesSelector({ ui: state })),\n\t\t\t\t);\n\t\t\t});\n\t\tcase UiActionKeys.SET_NUM_VACATION_DATES:\n\t\t\treturn produce(state, draftState => {\n\t\t\t\tdraftState.numVacationDates = action.payload;\n\t\t\t});\n\t\tcase UiActionKeys.GET_VACATION_PLAN_SUCCESS:\n\t\t\treturn produce(state, draftState => {\n\t\t\t\tdraftState.calendarDates = getUpdatedConnectedDates(\n\t\t\t\t\taction.payload.calendarDates.map(cd => ({ ...cd, date: new Date(cd.date) })),\n\t\t\t\t);\n\n\t\t\t\tdraftState.getVacationPlanSuccess = true;\n\t\t\t});\n\t\tcase UiActionKeys.GET_VACATION_PLAN_FAILURE:\n\t\t\treturn produce(state, draftState => {\n\t\t\t\tdraftState.getVacationPlanSuccess = false;\n\t\t\t});\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","export const getCurrentYear = () => new Date().getFullYear();\n","import { combineReducers } from 'redux';\nimport { uiReducer } from 'reduxUtilities/uiReducer';\nimport { routerReducer } from 'react-router-redux';\n\nexport const rootReducer = combineReducers({\n\tui: uiReducer,\n\trouting: routerReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { rootSaga } from 'reduxUtilities/rootSaga';\nimport { rootReducer } from 'reduxUtilities/rootReducer';\nimport { AppState } from 'reduxUtilities/AppState';\nimport { routerMiddleware } from 'react-router-redux';\nimport createHistory from 'history/createBrowserHistory';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst configureStore = (initialState: AppState) => {\n\tconst middleware = [sagaMiddleware, routerMiddleware(createHistory())];\n\n\t// In development, use the browser's Redux dev tools extension if installed\n\tconst enhancers = [];\n\tconst isDevelopment = process.env.NODE_ENV === 'development';\n\tif (isDevelopment && typeof window !== 'undefined' && (window as any).__REDUX_DEVTOOLS_EXTENSION__) {\n\t\tenhancers.push((window as any).__REDUX_DEVTOOLS_EXTENSION__());\n\t}\n\n\tconst intermediateStore = createStore(\n\t\trootReducer,\n\t\tinitialState,\n\t\tcompose(applyMiddleware(...middleware), ...enhancers),\n\t);\n\n\tsagaMiddleware.run(rootSaga);\n\n\treturn intermediateStore;\n};\n\nexport const store = configureStore((window as any).initialReduxState);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport axios from 'axios';\nimport { store } from 'reduxUtilities/store';\nimport { getBaseUrl } from 'utilities/getBaseUrl';\nimport { Router } from 'react-router';\nimport createHistory from 'history/createBrowserHistory';\n\naxios.defaults.baseURL = getBaseUrl();\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<Router history={createHistory()}>\n\t\t\t<App />\n\t\t</Router>\n\t</Provider>,\n\tdocument.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const developmentUrl = 'http://localhost:3001';\nconst productionUrl = 'https://sleepy-tundra-74114.herokuapp.com/';\n\nexport const getBaseUrl = () => {\n\tconst env = process.env.NODE_ENV;\n\treturn env === 'development' ? developmentUrl : productionUrl;\n};\n"],"sourceRoot":""}